//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use super::sea_orm_active_enums::DestructivePower;
use super::sea_orm_active_enums::DevelopmentPotential;
use super::sea_orm_active_enums::Persistance;
use super::sea_orm_active_enums::Precision;
use super::sea_orm_active_enums::Range;
use super::sea_orm_active_enums::Speed;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "stand")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub owner: String,
    pub destructive_power: Option<DestructivePower>,
    pub speed: Option<Speed>,
    pub range: Option<Range>,
    pub persistance: Option<Persistance>,
    pub precision: Option<Precision>,
    pub development_potential: Option<DevelopmentPotential>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelatedEntity)]
pub enum RelatedEntity {}
