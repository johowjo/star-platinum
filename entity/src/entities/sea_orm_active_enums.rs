//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::{entity::prelude::*};
use serde::Serialize;
use strum_macros::Display;

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Serialize, Display)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "destructive_power")]
pub enum DestructivePower {
    #[sea_orm(string_value = "A")]
    A,
    #[sea_orm(string_value = "B")]
    B,
    #[sea_orm(string_value = "C")]
    C,
    #[sea_orm(string_value = "D")]
    D,
    #[sea_orm(string_value = "E")]
    E,
    #[sea_orm(string_value = "NULL")]
    Null,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Display)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "development_potential"
)]
pub enum DevelopmentPotential {
    #[sea_orm(string_value = "A")]
    A,
    #[sea_orm(string_value = "B")]
    B,
    #[sea_orm(string_value = "C")]
    C,
    #[sea_orm(string_value = "D")]
    D,
    #[sea_orm(string_value = "E")]
    E,
    #[sea_orm(string_value = "NULL")]
    Null,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Display)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "persistance")]
pub enum Persistance {
    #[sea_orm(string_value = "A")]
    A,
    #[sea_orm(string_value = "B")]
    B,
    #[sea_orm(string_value = "C")]
    C,
    #[sea_orm(string_value = "D")]
    D,
    #[sea_orm(string_value = "E")]
    E,
    #[sea_orm(string_value = "NULL")]
    Null,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Display)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "precision")]
pub enum Precision {
    #[sea_orm(string_value = "A")]
    A,
    #[sea_orm(string_value = "B")]
    B,
    #[sea_orm(string_value = "C")]
    C,
    #[sea_orm(string_value = "D")]
    D,
    #[sea_orm(string_value = "E")]
    E,
    #[sea_orm(string_value = "NULL")]
    Null,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Display)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "range")]
pub enum Range {
    #[sea_orm(string_value = "A")]
    A,
    #[sea_orm(string_value = "B")]
    B,
    #[sea_orm(string_value = "C")]
    C,
    #[sea_orm(string_value = "D")]
    D,
    #[sea_orm(string_value = "E")]
    E,
    #[sea_orm(string_value = "NULL")]
    Null,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Display)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "speed")]
pub enum Speed {
    #[sea_orm(string_value = "A")]
    A,
    #[sea_orm(string_value = "B")]
    B,
    #[sea_orm(string_value = "C")]
    C,
    #[sea_orm(string_value = "D")]
    D,
    #[sea_orm(string_value = "E")]
    E,
    #[sea_orm(string_value = "NULL")]
    Null,
}
